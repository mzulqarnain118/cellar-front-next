stages:
  - prepare
  - test
  - deploy
  - release

default:
  image: node:18.16.0
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
    - SHELL="$(which bash)" pnpm setup
  cache: &cache
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store

install-dependencies:
  stage: prepare
  interruptible: true
  cache:
    <<: *cache
    policy: push
  script:
    - pnpm install
    - npx semantic-release@21

test-e2e:
  stage: test
  interruptible: true
  image: mcr.microsoft.com/playwright:v1.35.0-jammy
  when: on_success
  needs: ['install-dependencies']
  parallel: 7
  script:
    - pnpm e2e:headless
    # - npx playwright test --shard=$CI_NODE_INDEX/$CI_NODE_TOTAL:
  artifacts:
    when: always
    paths:
      - playwright-report/
      - test-results/
      - results.xml
    reports:
      junit: results.xml
    expire_in: 1 week

deploy-preview:
  stage: deploy
  except:
    - main
  script:
    - SHELL="$(which bash)" pnpm setup
    - pnpm add vercel -w -D
    - npx vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - npx vercel build --token=$VERCEL_TOKEN
    - npx vercel deploy --prebuilt --archive=tgz --token=$VERCEL_TOKEN

deploy-production:
  stage: deploy
  only:
    - main
  script:
    - SHELL="$(which bash)" pnpm setup
    - pnpm add vercel -w -D
    - npx vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - npx vercel build --prod --token=$VERCEL_TOKEN
    - npx vercel deploy --prebuilt --archive=tgz --prod --token=$VERCEL_TOKEN

release:
  stage: release
  needs: ['deploy-production']
  only:
    - main
  script:
    - pnpm run semantic-release
